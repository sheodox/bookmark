// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: user.sql

package query

import (
	"context"
	"time"
)

const addUser = `-- name: AddUser :one
insert into users
(provider_id, firebase_user_id, email, display_name, created_at)
values ($1, $2, $3, $4, $5)
returning id, provider_id, firebase_user_id, email, display_name, created_at
`

type AddUserParams struct {
	ProviderID     string
	FirebaseUserID string
	Email          string
	DisplayName    string
	CreatedAt      time.Time
}

func (q *Queries) AddUser(ctx context.Context, arg AddUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, addUser,
		arg.ProviderID,
		arg.FirebaseUserID,
		arg.Email,
		arg.DisplayName,
		arg.CreatedAt,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.ProviderID,
		&i.FirebaseUserID,
		&i.Email,
		&i.DisplayName,
		&i.CreatedAt,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
select id, provider_id, firebase_user_id, email, display_name, created_at
from users
where id = $1
`

func (q *Queries) GetUser(ctx context.Context, userID int32) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, userID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.ProviderID,
		&i.FirebaseUserID,
		&i.Email,
		&i.DisplayName,
		&i.CreatedAt,
	)
	return i, err
}

const getUserByFirebaseId = `-- name: GetUserByFirebaseId :one
select id, provider_id, firebase_user_id, email, display_name, created_at
from users
where firebase_user_id = $1
`

func (q *Queries) GetUserByFirebaseId(ctx context.Context, firebaseUserID string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByFirebaseId, firebaseUserID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.ProviderID,
		&i.FirebaseUserID,
		&i.Email,
		&i.DisplayName,
		&i.CreatedAt,
	)
	return i, err
}
